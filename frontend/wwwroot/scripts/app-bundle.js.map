{"version":3,"sources":["src/api.ts","src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts"],"names":[],"mappings":";;;;;;;;;;;;IAKA,IAAa,UAAU;QAInB,oBAAmB,MAAkB;YAAlB,WAAM,GAAN,MAAM,CAAY;YAH9B,YAAO,GAAG,cAAc,CAAC;YAI5B,MAAM,CAAC,SAAS,CAAC,UAAA,MAAM;gBACnB,MAAM;qBACD,WAAW,CAAC,qBAAW,CAAC,UAAU,CAAC;qBACnC,YAAY,CAAC;oBACV,OAAO,EAAE;wBACL,MAAM,EAAE,kBAAkB;qBAC7B;iBACJ,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QACL,iBAAC;IAAD,CAfA,AAeC,IAAA;IAfY,UAAU;QADtB,8BAAU;yCAKoB,iCAAU;OAJ5B,UAAU,CAetB;IAfY,gCAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICDvB,IAAa,GAAG;QAId,aAAmB,GAAe;YAAf,QAAG,GAAH,GAAG,CAAY;YAH3B,YAAO,GAAG,cAAc,CAAC;YAI9B,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAEa,wBAAU,GAAxB;;;;;;;4BAEI,KAAA,IAAI,CAAA;4BAAU,WAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC;qCACjD,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,EAAA;;4BAD5B,GAAK,MAAM,GAAG,SACc,CAAC;;;;4BAE7B,OAAO,CAAC,KAAK,CAAC,IAAE,CAAC,CAAC;;;;;;SAErB;QACH,UAAC;IAAD,CAhBA,AAgBC,IAAA;IAhBY,GAAG;QADf,8BAAU;yCAKe,gBAAU;OAJvB,GAAG,CAgBf;IAhBY,kBAAG;;;;;;;;ICJhB,kBAAe;QACb,UAAU,EAAE,4BAA4B;QACxC,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICDF,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;;;ICfD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-fetch-client';\r\nimport environment from './environment';\r\n\r\n@autoinject\r\nexport class ApiWrapper {\r\n    public message = 'Hello World!';\r\n    public values: string[];\r\n\r\n    constructor(public client: HttpClient) {\r\n        client.configure(config => {\r\n            config\r\n                .withBaseUrl(environment.apiBaseUrl)\r\n                .withDefaults({\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                    },\r\n                });\r\n        });\r\n    }\r\n}\r\n","import { autoinject } from 'aurelia-framework';\nimport { ApiWrapper } from './api';\n\n@autoinject\nexport class App {\n  public message = 'Hello World!';\n  public values: string[];\n\n  constructor(public api: ApiWrapper) {\n    this.initValues();\n  }\n\n  private async initValues() {\n    try {\n      this.values = await this.api.client.fetch(\"/values\")\n        .then((res) => res.json());\n    } catch (ex) {\n      console.error(ex);\n    }\n  }\n}\n","export default {\n  apiBaseUrl: \"http://localhost:64705/api\",\n  debug: true,\n  testing: true,\n};\n","import {Aurelia} from 'aurelia-framework';\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../.."}