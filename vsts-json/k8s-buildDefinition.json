{
	"build": [
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Restore",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "DotNetCoreCLI_1",
			"task": {
				"id": "5541a522-603c-47ad-91fc-a4b1d163081b",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"command": "restore",
				"publishWebProjects": "true",
				"projects": "$(Parameters.RestoreBuildProjects)",
				"arguments": "",
				"zipAfterPublish": "true"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Build",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "DotNetCoreCLI_2",
			"task": {
				"id": "5541a522-603c-47ad-91fc-a4b1d163081b",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"command": "build",
				"publishWebProjects": "true",
				"projects": "$(Parameters.RestoreBuildProjects)",
				"arguments": "--configuration $(BuildConfiguration) --version-suffix $(Build.BuildNumber)",
				"zipAfterPublish": "true"
			}
		},
		{
			"enabled": false,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Test",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "DotNetCoreCLI_3",
			"task": {
				"id": "5541a522-603c-47ad-91fc-a4b1d163081b",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"command": "test",
				"publishWebProjects": "true",
				"projects": "$(Parameters.TestProjects)",
				"arguments": "--configuration $(BuildConfiguration)",
				"zipAfterPublish": "true"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "npm install",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "Npm_7",
			"task": {
				"id": "fe47e961-9fa8-4106-8639-368c022d43ad",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"command": "install",
				"workingDir": "frontend",
				"customCommand": "",
				"customRegistry": "useNpmrc",
				"customFeed": "",
				"customEndpoint": "",
				"publishRegistry": "useExternalRegistry",
				"publishFeed": "",
				"publishEndpoint": ""
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Run node",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "CmdLine_8",
			"task": {
				"id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"filename": "node",
				"arguments": "node_modules/aurelia-cli/bin/aurelia-cli.js test",
				"workingFolder": "frontend",
				"failOnStandardError": "false"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Publish Test Results test*.xml",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "PublishTestResults_9",
			"task": {
				"id": "0b0f01ed-7dde-43ff-9cbb-e48954daf9b1",
				"versionSpec": "2.*",
				"definitionType": "task"
			},
			"inputs": {
				"testRunner": "VSTest",
				"testResultsFiles": "test*.xml",
				"searchFolder": "$(Build.SourcesDirectory)/frontend/testresults",
				"mergeTestResults": "false",
				"testRunTitle": "",
				"platform": "",
				"configuration": "",
				"publishRunAttachments": "true"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Publish code coverage from $(Build.SourcesDirectory)/frontend/reports/coverage/cobertura.xml",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "PublishCodeCoverageResults_10",
			"task": {
				"id": "2a7ebc54-c13e-490e-81a5-d7561ab7cd97",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"codeCoverageTool": "Cobertura",
				"summaryFileLocation": "$(Build.SourcesDirectory)/frontend/reports/coverage/cobertura.xml",
				"reportDirectory": "$(Build.SourcesDirectory)/frontend/reports/coverage/html",
				"additionalCodeCoverageFiles": "",
				"failIfCoverageEmpty": "false"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Run node",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "CmdLine_11",
			"task": {
				"id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"filename": "node",
				"arguments": "node_modules/aurelia-cli/bin/aurelia-cli.js build --env prod",
				"workingFolder": "frontend",
				"failOnStandardError": "false"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Publish",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "DotNetCoreCLI_4",
			"task": {
				"id": "5541a522-603c-47ad-91fc-a4b1d163081b",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"command": "publish",
				"publishWebProjects": "True",
				"projects": "",
				"arguments": "-c $(BuildConfiguration) -o publish",
				"zipAfterPublish": "false"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Build services",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "DockerCompose_12",
			"task": {
				"id": "6975e2d1-96d3-4afc-8a41-498b5d34ea19",
				"versionSpec": "0.*",
				"definitionType": "task"
			},
			"inputs": {
				"containerregistrytype": "Azure Container Registry",
				"dockerRegistryEndpoint": "",
				"azureSubscriptionEndpoint": "5307b8dd-c135-431b-8ab7-56114e05a2a2",
				"azureContainerRegistry": "{\"loginServer\":\"cdk8s.azurecr.io\", \"id\" : \"/subscriptions/64b3f8df-6620-4b2d-b8c7-79031d289eef/resourcegroups/cd-k8s/providers/Microsoft.ContainerRegistry/registries/cdk8s\"}",
				"dockerComposeFile": "**/docker-compose.yml",
				"additionalDockerComposeFiles": "docker-compose.vsts.yml",
				"dockerComposeFileArgs": "",
				"projectName": "$(Build.Repository.Name)",
				"qualifyImageNames": "true",
				"action": "Build services",
				"additionalImageTags": "$(Build.BuildNumber)",
				"includeSourceTags": "false",
				"includeLatestTag": "false",
				"buildImages": "true",
				"serviceName": "",
				"containerName": "",
				"ports": "",
				"workDir": "",
				"entrypoint": "",
				"containerCommand": "",
				"detached": "true",
				"abortOnContainerExit": "true",
				"imageDigestComposeFile": "$(Build.StagingDirectory)/docker-compose.images.yml",
				"removeBuildOptions": "false",
				"baseResolveDirectory": "",
				"outputDockerComposeFile": "$(Build.StagingDirectory)/docker-compose.yml",
				"dockerComposeCommand": "build",
				"dockerHostEndpoint": "",
				"nopIfNoDockerComposeFile": "false",
				"requireAdditionalDockerComposeFiles": "false",
				"cwd": "$(System.DefaultWorkingDirectory)"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": false,
			"displayName": "Push services",
			"timeoutInMinutes": 0,
			"condition": "succeeded()",
			"refName": "Cloned_DockerCompose_12_13",
			"task": {
				"id": "6975e2d1-96d3-4afc-8a41-498b5d34ea19",
				"versionSpec": "0.*",
				"definitionType": "task"
			},
			"inputs": {
				"containerregistrytype": "Azure Container Registry",
				"dockerRegistryEndpoint": "",
				"azureSubscriptionEndpoint": "5307b8dd-c135-431b-8ab7-56114e05a2a2",
				"azureContainerRegistry": "{\"loginServer\":\"cdk8s.azurecr.io\", \"id\" : \"/subscriptions/64b3f8df-6620-4b2d-b8c7-79031d289eef/resourcegroups/cd-k8s/providers/Microsoft.ContainerRegistry/registries/cdk8s\"}",
				"dockerComposeFile": "**/docker-compose.yml",
				"additionalDockerComposeFiles": "docker-compose.vsts.yml",
				"dockerComposeFileArgs": "",
				"projectName": "$(Build.Repository.Name)",
				"qualifyImageNames": "true",
				"action": "Push services",
				"additionalImageTags": "$(Build.BuildNumber)",
				"includeSourceTags": "false",
				"includeLatestTag": "true",
				"buildImages": "true",
				"serviceName": "",
				"containerName": "",
				"ports": "",
				"workDir": "",
				"entrypoint": "",
				"containerCommand": "",
				"detached": "true",
				"abortOnContainerExit": "true",
				"imageDigestComposeFile": "$(Build.StagingDirectory)/docker-compose.images.yml",
				"removeBuildOptions": "false",
				"baseResolveDirectory": "",
				"outputDockerComposeFile": "$(Build.StagingDirectory)/docker-compose.yml",
				"dockerComposeCommand": "build",
				"dockerHostEndpoint": "",
				"nopIfNoDockerComposeFile": "false",
				"requireAdditionalDockerComposeFiles": "false",
				"cwd": "$(System.DefaultWorkingDirectory)"
			}
		},
		{
			"enabled": true,
			"continueOnError": false,
			"alwaysRun": true,
			"displayName": "Publish Artifact",
			"timeoutInMinutes": 0,
			"condition": "succeededOrFailed()",
			"refName": "PublishBuildArtifacts_5",
			"task": {
				"id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
				"versionSpec": "1.*",
				"definitionType": "task"
			},
			"inputs": {
				"PathtoPublish": "k8s",
				"ArtifactName": "k8s",
				"ArtifactType": "Container",
				"TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
			}
		}
	],
	"options": [
		{
			"enabled": true,
			"definition": { "id": "5d58cc01-7c75-450c-be18-a388ddb129ec" },
			"inputs": {
				"branchFilters": "[\"+refs/heads/*\"]",
				"additionalFields": "{}"
			}
		},
		{
			"enabled": false,
			"definition": { "id": "7c555368-ca64-4199-add6-9ebaf0b0137d" },
			"inputs": {
				"multipliers": "[]",
				"parallel": "false",
				"continueOnError": "true",
				"additionalFields": "{}"
			}
		},
		{
			"enabled": false,
			"definition": { "id": "a9db38f9-9fdc-478c-b0f9-464221e58316" },
			"inputs": {
				"workItemType": "826174",
				"assignToRequestor": "true",
				"additionalFields": "{}"
			}
		},
		{
			"enabled": false,
			"definition": { "id": "57578776-4c22-4526-aeb0-86b6da17ee9c" },
			"inputs": {}
		}
	],
	"variables": {
		"system.debug": {
			"value": "false",
			"allowOverride": true
		},
		"BuildConfiguration": {
			"value": "release",
			"allowOverride": true
		},
		"BuildPlatform": {
			"value": "any cpu",
			"allowOverride": true
		}
	},
	"retentionRules": [
		{
			"branches": [ "+refs/heads/*" ],
			"artifacts": [],
			"artifactTypesToDelete": [ "FilePath", "SymbolStore" ],
			"daysToKeep": 10,
			"minimumToKeep": 1,
			"deleteBuildRecord": true,
			"deleteTestResults": true
		}
	],
	"metrics": [
		{
			"name": "CurrentBuildsInQueue",
			"scope": "refs/heads/docker",
			"intValue": 0
		},
		{
			"name": "CurrentBuildsInProgress",
			"scope": "refs/heads/docker",
			"intValue": 0
		},
		{
			"name": "CanceledBuilds",
			"scope": "refs/heads/docker",
			"intValue": 0,
			"date": "2017-07-02T00:00:00.000Z"
		},
		{
			"name": "FailedBuilds",
			"scope": "refs/heads/docker",
			"intValue": 0,
			"date": "2017-07-02T00:00:00.000Z"
		},
		{
			"name": "PartiallySuccessfulBuilds",
			"scope": "refs/heads/docker",
			"intValue": 0,
			"date": "2017-07-02T00:00:00.000Z"
		},
		{
			"name": "SuccessfulBuilds",
			"scope": "refs/heads/docker",
			"intValue": 1,
			"date": "2017-07-02T00:00:00.000Z"
		},
		{
			"name": "TotalBuilds",
			"scope": "refs/heads/docker",
			"intValue": 1,
			"date": "2017-07-02T00:00:00.000Z"
		}
	],
	"_links": {
		"self": { "href": "https://cacdemo.visualstudio.com/c79d9371-592e-4f29-b314-80fb134332d6/_apis/build/Definitions/36" },
		"web": { "href": "https://cacdemo.visualstudio.com/_permalink/_build/index?collectionId=2447ce35-aa30-489e-b4f2-46cce181b99b&projectId=c79d9371-592e-4f29-b314-80fb134332d6&definitionId=36" },
		"editor": { "href": "https://cacdemo.visualstudio.com/_permalink/_build/definitionEditor?collectionId=2447ce35-aa30-489e-b4f2-46cce181b99b&projectId=c79d9371-592e-4f29-b314-80fb134332d6&definitionId=36" }
	},
	"buildNumberFormat": "1.0.0$(rev:.r)",
	"jobAuthorizationScope": 1,
	"jobTimeoutInMinutes": 60,
	"jobCancelTimeoutInMinutes": 5,
	"repository": {
		"properties": {
			"cleanOptions": "0",
			"gitLfsSupport": "false",
			"skipSyncSource": "false",
			"checkoutNestedSubmodules": "false",
			"reportBuildStatus": "true",
			"fetchDepth": "0",
			"connectedServiceId": "fc02d90e-2259-49f8-976e-132bde6800c9",
			"apiUrl": "https://api.github.com/repos/colindembovsky/AzureAureliaDemo",
			"branchesUrl": "https://api.github.com/repos/colindembovsky/AzureAureliaDemo/branches",
			"cloneUrl": "https://github.com/colindembovsky/AzureAureliaDemo.git",
			"refsUrl": "https://api.github.com/repos/colindembovsky/AzureAureliaDemo/git/refs"
		},
		"id": "https://github.com/colindembovsky/AzureAureliaDemo.git",
		"type": "GitHub",
		"name": "colindembovsky/AzureAureliaDemo",
		"url": "https://github.com/colindembovsky/AzureAureliaDemo.git",
		"defaultBranch": "docker",
		"clean": "false",
		"checkoutSubmodules": false
	},
	"processParameters": {
		"inputs": [
			{
				"options": {},
				"properties": {},
				"name": "RestoreBuildProjects",
				"label": "Project(s) to restore and build",
				"defaultValue": "**/*.csproj",
				"type": "multiline",
				"helpMarkDown": "Relative path of the .csproj file(s) from repo root. Wildcards can be used. For example, **/*.csproj for all .csproj files in all the subfolders.",
				"visibleRule": "",
				"groupName": ""
			},
			{
				"options": {},
				"properties": {},
				"name": "TestProjects",
				"label": "Project(s) to test",
				"defaultValue": "**/*Tests/*.csproj",
				"type": "multiline",
				"helpMarkDown": "Relative path of the .csproj file(s) from repo root. Wildcards can be used. For example, **/*.csproj for all .csproj files in all the subfolders.",
				"visibleRule": "",
				"groupName": ""
			}
		]
	},
	"quality": 1,
	"queue": {
		"id": 46,
		"name": "Hosted Linux Preview",
		"pool": {
			"id": 6,
			"name": "Hosted Linux Preview",
			"isHosted": true
		}
	},
	"id": 36,
	"name": "k8s-demo-CI",
	"url": "https://cacdemo.visualstudio.com/c79d9371-592e-4f29-b314-80fb134332d6/_apis/build/Definitions/36",
	"uri": "vstfs:///Build/Definition/36",
	"path": "\\",
	"type": 2,
	"revision": 1,
	"createdDate": "2017-07-02T22:33:14.953Z",
	"project": {
		"id": "c79d9371-592e-4f29-b314-80fb134332d6",
		"name": "k8s",
		"url": "https://cacdemo.visualstudio.com/_apis/projects/c79d9371-592e-4f29-b314-80fb134332d6",
		"state": "wellFormed",
		"revision": 70,
		"visibility": 0
	}
}